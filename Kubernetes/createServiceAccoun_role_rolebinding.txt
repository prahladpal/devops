1) Create a service account to allow the access to pods by defining the the Roles and Rolebinding

apiVersion: v1
kind: ServiceAccount
metadata:
 name: mysa
 namespace: first-pod-ns

kubectl apply -f <filename>.yaml
kubectl get serviceaccount -n first-pod-ns

2) Roles

apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
 namespace: first-pod-ns
 name: myfirstrole
rules:
 - apiGroups: [""]
   resources: ["pods"]
   verbs: ["get", "list", "create", "delete"]

The above role will allow the verbs for teh pods.

kubectl apply -f <filename>.yaml
kubectl get roles -n first-pod-ns

3) Binding the Service account with roles

apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
 namespace: first-pod-ns
 name: firstRoleBinding
subjects:
- kind: ServiceAccount
  name: mysa
  namespace: first-pod-ns
roleRef:
  kind: Role
  name: myfirstrole
  apiGroup: rbac.authorization.k8s.io

kubectl apply -f <filename>.yaml
kubectl get rolebinding -n first-pod-ns

The above will bind the role to a service account in the defined namespace.